// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v6.32.1
// source: combat/combat.proto

package combat

import (
	health "github.com/komadiina/spelltext/proto/health"
	repo "github.com/komadiina/spelltext/proto/repo"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListNpcsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// lists npc's whose min_level < character.level < max_level
	CharacterId   uint64 `protobuf:"varint,1,opt,name=character_id,json=characterId,proto3" json:"character_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNpcsRequest) Reset() {
	*x = ListNpcsRequest{}
	mi := &file_combat_combat_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNpcsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNpcsRequest) ProtoMessage() {}

func (x *ListNpcsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_combat_combat_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNpcsRequest.ProtoReflect.Descriptor instead.
func (*ListNpcsRequest) Descriptor() ([]byte, []int) {
	return file_combat_combat_proto_rawDescGZIP(), []int{0}
}

func (x *ListNpcsRequest) GetCharacterId() uint64 {
	if x != nil {
		return x.CharacterId
	}
	return 0
}

type NpcListItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Npc           *repo.Npc              `protobuf:"bytes,1,opt,name=npc,proto3" json:"npc,omitempty"`
	Drops         []*repo.Item           `protobuf:"bytes,2,rep,name=drops,proto3" json:"drops,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NpcListItem) Reset() {
	*x = NpcListItem{}
	mi := &file_combat_combat_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NpcListItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NpcListItem) ProtoMessage() {}

func (x *NpcListItem) ProtoReflect() protoreflect.Message {
	mi := &file_combat_combat_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NpcListItem.ProtoReflect.Descriptor instead.
func (*NpcListItem) Descriptor() ([]byte, []int) {
	return file_combat_combat_proto_rawDescGZIP(), []int{1}
}

func (x *NpcListItem) GetNpc() *repo.Npc {
	if x != nil {
		return x.Npc
	}
	return nil
}

func (x *NpcListItem) GetDrops() []*repo.Item {
	if x != nil {
		return x.Drops
	}
	return nil
}

type ListNpcsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Npcs          []*NpcListItem         `protobuf:"bytes,1,rep,name=npcs,proto3" json:"npcs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNpcsResponse) Reset() {
	*x = ListNpcsResponse{}
	mi := &file_combat_combat_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNpcsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNpcsResponse) ProtoMessage() {}

func (x *ListNpcsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_combat_combat_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNpcsResponse.ProtoReflect.Descriptor instead.
func (*ListNpcsResponse) Descriptor() ([]byte, []int) {
	return file_combat_combat_proto_rawDescGZIP(), []int{2}
}

func (x *ListNpcsResponse) GetNpcs() []*NpcListItem {
	if x != nil {
		return x.Npcs
	}
	return nil
}

type SubmitLossRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CharacterId   uint64                 `protobuf:"varint,1,opt,name=character_id,json=characterId,proto3" json:"character_id,omitempty"`
	NpcId         uint64                 `protobuf:"varint,2,opt,name=npc_id,json=npcId,proto3" json:"npc_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitLossRequest) Reset() {
	*x = SubmitLossRequest{}
	mi := &file_combat_combat_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitLossRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitLossRequest) ProtoMessage() {}

func (x *SubmitLossRequest) ProtoReflect() protoreflect.Message {
	mi := &file_combat_combat_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitLossRequest.ProtoReflect.Descriptor instead.
func (*SubmitLossRequest) Descriptor() ([]byte, []int) {
	return file_combat_combat_proto_rawDescGZIP(), []int{3}
}

func (x *SubmitLossRequest) GetCharacterId() uint64 {
	if x != nil {
		return x.CharacterId
	}
	return 0
}

func (x *SubmitLossRequest) GetNpcId() uint64 {
	if x != nil {
		return x.NpcId
	}
	return 0
}

type SubmitLossResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ack           bool                   `protobuf:"varint,1,opt,name=ack,proto3" json:"ack,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitLossResponse) Reset() {
	*x = SubmitLossResponse{}
	mi := &file_combat_combat_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitLossResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitLossResponse) ProtoMessage() {}

func (x *SubmitLossResponse) ProtoReflect() protoreflect.Message {
	mi := &file_combat_combat_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitLossResponse.ProtoReflect.Descriptor instead.
func (*SubmitLossResponse) Descriptor() ([]byte, []int) {
	return file_combat_combat_proto_rawDescGZIP(), []int{4}
}

func (x *SubmitLossResponse) GetAck() bool {
	if x != nil {
		return x.Ack
	}
	return false
}

type SubmitWinRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CharacterId   uint64                 `protobuf:"varint,1,opt,name=character_id,json=characterId,proto3" json:"character_id,omitempty"`
	NpcId         uint64                 `protobuf:"varint,2,opt,name=npc_id,json=npcId,proto3" json:"npc_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitWinRequest) Reset() {
	*x = SubmitWinRequest{}
	mi := &file_combat_combat_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitWinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitWinRequest) ProtoMessage() {}

func (x *SubmitWinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_combat_combat_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitWinRequest.ProtoReflect.Descriptor instead.
func (*SubmitWinRequest) Descriptor() ([]byte, []int) {
	return file_combat_combat_proto_rawDescGZIP(), []int{5}
}

func (x *SubmitWinRequest) GetCharacterId() uint64 {
	if x != nil {
		return x.CharacterId
	}
	return 0
}

func (x *SubmitWinRequest) GetNpcId() uint64 {
	if x != nil {
		return x.NpcId
	}
	return 0
}

type SubmitWinResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// if winning the combat results in a level up
	LevelUp      bool            `protobuf:"varint,1,opt,name=level_up,json=levelUp,proto3" json:"level_up,omitempty"`
	NewCharacter *repo.Character `protobuf:"bytes,2,opt,name=new_character,json=newCharacter,proto3,oneof" json:"new_character,omitempty"` // if level_up==true, client updates the selectedCharacter to this value
	// rewards, serves as information for client
	GoldReward    []*repo.Item `protobuf:"bytes,3,rep,name=gold_reward,json=goldReward,proto3" json:"gold_reward,omitempty"`
	XpReward      []*repo.Item `protobuf:"bytes,4,rep,name=xp_reward,json=xpReward,proto3" json:"xp_reward,omitempty"`
	ItemReward    []*repo.Item `protobuf:"bytes,5,rep,name=item_reward,json=itemReward,proto3" json:"item_reward,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitWinResponse) Reset() {
	*x = SubmitWinResponse{}
	mi := &file_combat_combat_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitWinResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitWinResponse) ProtoMessage() {}

func (x *SubmitWinResponse) ProtoReflect() protoreflect.Message {
	mi := &file_combat_combat_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitWinResponse.ProtoReflect.Descriptor instead.
func (*SubmitWinResponse) Descriptor() ([]byte, []int) {
	return file_combat_combat_proto_rawDescGZIP(), []int{6}
}

func (x *SubmitWinResponse) GetLevelUp() bool {
	if x != nil {
		return x.LevelUp
	}
	return false
}

func (x *SubmitWinResponse) GetNewCharacter() *repo.Character {
	if x != nil {
		return x.NewCharacter
	}
	return nil
}

func (x *SubmitWinResponse) GetGoldReward() []*repo.Item {
	if x != nil {
		return x.GoldReward
	}
	return nil
}

func (x *SubmitWinResponse) GetXpReward() []*repo.Item {
	if x != nil {
		return x.XpReward
	}
	return nil
}

func (x *SubmitWinResponse) GetItemReward() []*repo.Item {
	if x != nil {
		return x.ItemReward
	}
	return nil
}

var File_combat_combat_proto protoreflect.FileDescriptor

const file_combat_combat_proto_rawDesc = "" +
	"\n" +
	"\x13combat/combat.proto\x12\x06combat\x1a\x0frepo/repo.proto\x1a\x13health/health.proto\"4\n" +
	"\x0fListNpcsRequest\x12!\n" +
	"\fcharacter_id\x18\x01 \x01(\x04R\vcharacterId\"L\n" +
	"\vNpcListItem\x12\x1b\n" +
	"\x03npc\x18\x01 \x01(\v2\t.repo.NpcR\x03npc\x12 \n" +
	"\x05drops\x18\x02 \x03(\v2\n" +
	".repo.ItemR\x05drops\";\n" +
	"\x10ListNpcsResponse\x12'\n" +
	"\x04npcs\x18\x01 \x03(\v2\x13.combat.NpcListItemR\x04npcs\"M\n" +
	"\x11SubmitLossRequest\x12!\n" +
	"\fcharacter_id\x18\x01 \x01(\x04R\vcharacterId\x12\x15\n" +
	"\x06npc_id\x18\x02 \x01(\x04R\x05npcId\"&\n" +
	"\x12SubmitLossResponse\x12\x10\n" +
	"\x03ack\x18\x01 \x01(\bR\x03ack\"L\n" +
	"\x10SubmitWinRequest\x12!\n" +
	"\fcharacter_id\x18\x01 \x01(\x04R\vcharacterId\x12\x15\n" +
	"\x06npc_id\x18\x02 \x01(\x04R\x05npcId\"\xfe\x01\n" +
	"\x11SubmitWinResponse\x12\x19\n" +
	"\blevel_up\x18\x01 \x01(\bR\alevelUp\x129\n" +
	"\rnew_character\x18\x02 \x01(\v2\x0f.repo.CharacterH\x00R\fnewCharacter\x88\x01\x01\x12+\n" +
	"\vgold_reward\x18\x03 \x03(\v2\n" +
	".repo.ItemR\n" +
	"goldReward\x12'\n" +
	"\txp_reward\x18\x04 \x03(\v2\n" +
	".repo.ItemR\bxpReward\x12+\n" +
	"\vitem_reward\x18\x05 \x03(\v2\n" +
	".repo.ItemR\n" +
	"itemRewardB\x10\n" +
	"\x0e_new_character2\x90\x02\n" +
	"\x06Combat\x12@\n" +
	"\x05Check\x12\x1a.health.HealthCheckRequest\x1a\x1b.health.HealthCheckResponse\x12=\n" +
	"\bListNpcs\x12\x17.combat.ListNpcsRequest\x1a\x18.combat.ListNpcsResponse\x12C\n" +
	"\n" +
	"SubmitLoss\x12\x19.combat.SubmitLossRequest\x1a\x1a.combat.SubmitLossResponse\x12@\n" +
	"\tSubmitWin\x12\x18.combat.SubmitWinRequest\x1a\x19.combat.SubmitWinResponseB4Z2github.com/komadiina/spelltext/proto/combat;combatb\x06proto3"

var (
	file_combat_combat_proto_rawDescOnce sync.Once
	file_combat_combat_proto_rawDescData []byte
)

func file_combat_combat_proto_rawDescGZIP() []byte {
	file_combat_combat_proto_rawDescOnce.Do(func() {
		file_combat_combat_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_combat_combat_proto_rawDesc), len(file_combat_combat_proto_rawDesc)))
	})
	return file_combat_combat_proto_rawDescData
}

var file_combat_combat_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_combat_combat_proto_goTypes = []any{
	(*ListNpcsRequest)(nil),            // 0: combat.ListNpcsRequest
	(*NpcListItem)(nil),                // 1: combat.NpcListItem
	(*ListNpcsResponse)(nil),           // 2: combat.ListNpcsResponse
	(*SubmitLossRequest)(nil),          // 3: combat.SubmitLossRequest
	(*SubmitLossResponse)(nil),         // 4: combat.SubmitLossResponse
	(*SubmitWinRequest)(nil),           // 5: combat.SubmitWinRequest
	(*SubmitWinResponse)(nil),          // 6: combat.SubmitWinResponse
	(*repo.Npc)(nil),                   // 7: repo.Npc
	(*repo.Item)(nil),                  // 8: repo.Item
	(*repo.Character)(nil),             // 9: repo.Character
	(*health.HealthCheckRequest)(nil),  // 10: health.HealthCheckRequest
	(*health.HealthCheckResponse)(nil), // 11: health.HealthCheckResponse
}
var file_combat_combat_proto_depIdxs = []int32{
	7,  // 0: combat.NpcListItem.npc:type_name -> repo.Npc
	8,  // 1: combat.NpcListItem.drops:type_name -> repo.Item
	1,  // 2: combat.ListNpcsResponse.npcs:type_name -> combat.NpcListItem
	9,  // 3: combat.SubmitWinResponse.new_character:type_name -> repo.Character
	8,  // 4: combat.SubmitWinResponse.gold_reward:type_name -> repo.Item
	8,  // 5: combat.SubmitWinResponse.xp_reward:type_name -> repo.Item
	8,  // 6: combat.SubmitWinResponse.item_reward:type_name -> repo.Item
	10, // 7: combat.Combat.Check:input_type -> health.HealthCheckRequest
	0,  // 8: combat.Combat.ListNpcs:input_type -> combat.ListNpcsRequest
	3,  // 9: combat.Combat.SubmitLoss:input_type -> combat.SubmitLossRequest
	5,  // 10: combat.Combat.SubmitWin:input_type -> combat.SubmitWinRequest
	11, // 11: combat.Combat.Check:output_type -> health.HealthCheckResponse
	2,  // 12: combat.Combat.ListNpcs:output_type -> combat.ListNpcsResponse
	4,  // 13: combat.Combat.SubmitLoss:output_type -> combat.SubmitLossResponse
	6,  // 14: combat.Combat.SubmitWin:output_type -> combat.SubmitWinResponse
	11, // [11:15] is the sub-list for method output_type
	7,  // [7:11] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_combat_combat_proto_init() }
func file_combat_combat_proto_init() {
	if File_combat_combat_proto != nil {
		return
	}
	file_combat_combat_proto_msgTypes[6].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_combat_combat_proto_rawDesc), len(file_combat_combat_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_combat_combat_proto_goTypes,
		DependencyIndexes: file_combat_combat_proto_depIdxs,
		MessageInfos:      file_combat_combat_proto_msgTypes,
	}.Build()
	File_combat_combat_proto = out.File
	file_combat_combat_proto_goTypes = nil
	file_combat_combat_proto_depIdxs = nil
}
