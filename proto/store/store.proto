syntax = "proto3";
package store;
option go_package = "github.com/komadiina/spelltext/proto/store;store";

import "repo/repo.proto";

message StoreListVendorRequest {
  string noop = 1;
}

message StoreListVendorResponse {
  repeated repo.Vendor vendors = 1;
}

message StoreListVendorItemRequest {
  uint64 vendor_id = 1;                      // 0 = any
  int32 rarity_min = 2;
  int32 rarity_max = 3;
  uint32 stackable = 4;                          
  uint32 in_stock = 5;                           
  int32 page_size = 10;
  string page_token = 11;
  string sort_by = 12;                         // "name", "rarity", "stock"
  bool sort_desc = 13;
}

message ListVendorItemResponse {
  repeated repo.Item items = 1;
  int64 total_count = 2;
}

message GenericDetails {
  string note = 1;
}

message BuyItemRequest {
  uint64 character_id = 1;
  repeated uint64 item_ids = 2;
  int32 quantity = 3;
}

message BuyItemResponse {
  bool success = 1;
  string message = 2;
}

message SellItemRequest {
  uint64 character_id = 1;
  int64 item_instance_id = 2;
}

message SellItemResponse {
  bool success = 1;
  string message = 2;
}

message PingRequest {}
message PingResponse {}

service Store {
  rpc Ping(PingRequest) returns (PingResponse);
  rpc ListVendors(StoreListVendorRequest) returns (StoreListVendorResponse);
  rpc ListVendorItems(StoreListVendorItemRequest) returns (ListVendorItemResponse);
  rpc BuyItems(BuyItemRequest) returns (BuyItemResponse);
  rpc SellItem(SellItemRequest) returns (SellItemResponse); 
}